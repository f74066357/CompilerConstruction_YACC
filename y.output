Terminals unused in grammar

   COMMA
   TRUE
   FALSE


State 107 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: StatementList Statement
    3              | Statement

    4 Statement: DeclarationStmt NEWLINE
    5          | SimpleStmt NEWLINE
    6          | Block NEWLINE
    7          | IfStmt NEWLINE
    8          | ForStmt NEWLINE
    9          | PrintStmt NEWLINE
   10          | NEWLINE

   11 DeclarationStmt: VAR ID Type
   12                | VAR ID Type ASSIGN Expression

   13 SimpleStmt: AssignmentStmt
   14           | ExpressionStmt
   15           | IncDecStmt

   16 AssignmentStmt: Expression assign_op Expression

   17 assign_op: ASSIGN
   18          | ADD_ASSIGN
   19          | SUB_ASSIGN
   20          | MUL_ASSIGN
   21          | QUO_ASSIGN
   22          | REM_ASSIGN

   23 ExpressionStmt: Expression

   24 Type: TypeName
   25     | ArrayType

   26 TypeName: INT
   27         | FLOAT
   28         | STRING
   29         | BOOL

   30 ArrayType: LBRACK Expression RBRACK Type

   31 Expression: UnaryExpr
   32           | Expression binary_op Expression

   33 UnaryExpr: PrimaryExpr
   34          | unary_op UnaryExpr

   35 binary_op: LOR
   36          | LAND
   37          | cmp_op
   38          | add_op
   39          | mul_op

   40 cmp_op: EQL
   41       | NEQ
   42       | LSS
   43       | LEQ
   44       | GTR
   45       | GEQ

   46 add_op: ADD
   47       | SUB

   48 mul_op: MUL
   49       | QUO
   50       | REM

   51 unary_op: ADD
   52         | SUB
   53         | NOT

   54 PrimaryExpr: Operand
   55            | IndexExpr
   56            | ConversionExpr

   57 Operand: Literal
   58        | ID
   59        | LPAREN Expression RPAREN

   60 Literal: INT_LIT
   61        | FLOAT_LIT
   62        | BOOL_LIT
   63        | STRING_LIT

   64 IndexExpr: PrimaryExpr LBRACK Expression RBRACK

   65 ConversionExpr: Type LPAREN Expression RPAREN

   66 IncDecStmt: Expression INC
   67           | Expression DEC

   68 Block: LBRACE StatementList RBRACE

   69 IfStmt: IF Condition Block
   70       | IF Condition Block ELSE IfStmt
   71       | IF Condition Block ELSE Block

   72 Condition: Expression

   73 ForStmt: FOR Condition Block
   74        | FOR ForClause Block

   75 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   76 InitStmt: SimpleStmt

   77 PostStmt: SimpleStmt

   78 PrintStmt: PRINT LPAREN Expression RPAREN
   79          | PRINTLN LPAREN Expression RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 46 51
SUB (259) 47 52
MUL (260) 48
QUO (261) 49
REM (262) 50
INC (263) 66
DEC (264) 67
GTR (265) 44
LSS (266) 42
GEQ (267) 45
LEQ (268) 43
EQL (269) 40
NEQ (270) 41
ASSIGN (271) 12 17
ADD_ASSIGN (272) 18
SUB_ASSIGN (273) 19
MUL_ASSIGN (274) 20
QUO_ASSIGN (275) 21
REM_ASSIGN (276) 22
LAND (277) 36
LOR (278) 35
NOT (279) 53
LPAREN (280) 59 65 78 79
RPAREN (281) 59 65 78 79
LBRACK (282) 30 64
RBRACK (283) 30 64
LBRACE (284) 68
RBRACE (285) 68
COMMA (286)
SEMICOLON (287) 75
NEWLINE (288) 4 5 6 7 8 9 10
PRINT (289) 78
PRINTLN (290) 79
IF (291) 69 70 71
ELSE (292) 70 71
FOR (293) 73 74
VAR (294) 11 12
TRUE (295)
FALSE (296)
INT (297) 26
FLOAT (298) 27
BOOL (299) 29
STRING (300) 28
INT_LIT (301) 60
FLOAT_LIT (302) 61
STRING_LIT (303) 63
BOOL_LIT (304) 62
ID (305) 11 12 58


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1, on right: 0
StatementList (53)
    on left: 2 3, on right: 1 2 68
Statement (54)
    on left: 4 5 6 7 8 9 10, on right: 2 3
DeclarationStmt (55)
    on left: 11 12, on right: 4
SimpleStmt (56)
    on left: 13 14 15, on right: 5 76 77
AssignmentStmt (57)
    on left: 16, on right: 13
assign_op (58)
    on left: 17 18 19 20 21 22, on right: 16
ExpressionStmt (59)
    on left: 23, on right: 14
Type (60)
    on left: 24 25, on right: 11 12 30 65
TypeName (61)
    on left: 26 27 28 29, on right: 24
ArrayType (62)
    on left: 30, on right: 25
Expression (63)
    on left: 31 32, on right: 12 16 23 30 32 59 64 65 66 67 72 78 79
UnaryExpr (64)
    on left: 33 34, on right: 31 34
binary_op (65)
    on left: 35 36 37 38 39, on right: 32
cmp_op (66)
    on left: 40 41 42 43 44 45, on right: 37
add_op (67)
    on left: 46 47, on right: 38
mul_op (68)
    on left: 48 49 50, on right: 39
unary_op (69)
    on left: 51 52 53, on right: 34
PrimaryExpr (70)
    on left: 54 55 56, on right: 33 64
Operand (71)
    on left: 57 58 59, on right: 54
Literal (72)
    on left: 60 61 62 63, on right: 57
IndexExpr (73)
    on left: 64, on right: 55
ConversionExpr (74)
    on left: 65, on right: 56
IncDecStmt (75)
    on left: 66 67, on right: 15
Block (76)
    on left: 68, on right: 6 69 70 71 73 74
IfStmt (77)
    on left: 69 70 71, on right: 7 70
Condition (78)
    on left: 72, on right: 69 70 71 73 75
ForStmt (79)
    on left: 73 74, on right: 8
ForClause (80)
    on left: 75, on right: 74
InitStmt (81)
    on left: 76, on right: 75
PostStmt (82)
    on left: 77, on right: 75
PrintStmt (83)
    on left: 78 79, on right: 9


State 0

    0 $accept: . Program $end

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    LBRACE      shift, and go to state 6
    NEWLINE     shift, and go to state 7
    PRINT       shift, and go to state 8
    PRINTLN     shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    VAR         shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Program          go to state 22
    StatementList    go to state 23
    Statement        go to state 24
    DeclarationStmt  go to state 25
    SimpleStmt       go to state 26
    AssignmentStmt   go to state 27
    ExpressionStmt   go to state 28
    Type             go to state 29
    TypeName         go to state 30
    ArrayType        go to state 31
    Expression       go to state 32
    UnaryExpr        go to state 33
    unary_op         go to state 34
    PrimaryExpr      go to state 35
    Operand          go to state 36
    Literal          go to state 37
    IndexExpr        go to state 38
    ConversionExpr   go to state 39
    IncDecStmt       go to state 40
    Block            go to state 41
    IfStmt           go to state 42
    ForStmt          go to state 43
    PrintStmt        go to state 44


State 1

   51 unary_op: ADD .

    $default  reduce using rule 51 (unary_op)


State 2

   52 unary_op: SUB .

    $default  reduce using rule 52 (unary_op)


State 3

   53 unary_op: NOT .

    $default  reduce using rule 53 (unary_op)


State 4

   59 Operand: LPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 45
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 5

   30 ArrayType: LBRACK . Expression RBRACK Type

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 46
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 6

   68 Block: LBRACE . StatementList RBRACE

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    LBRACE      shift, and go to state 6
    NEWLINE     shift, and go to state 7
    PRINT       shift, and go to state 8
    PRINTLN     shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    VAR         shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    StatementList    go to state 47
    Statement        go to state 24
    DeclarationStmt  go to state 25
    SimpleStmt       go to state 26
    AssignmentStmt   go to state 27
    ExpressionStmt   go to state 28
    Type             go to state 29
    TypeName         go to state 30
    ArrayType        go to state 31
    Expression       go to state 32
    UnaryExpr        go to state 33
    unary_op         go to state 34
    PrimaryExpr      go to state 35
    Operand          go to state 36
    Literal          go to state 37
    IndexExpr        go to state 38
    ConversionExpr   go to state 39
    IncDecStmt       go to state 40
    Block            go to state 41
    IfStmt           go to state 42
    ForStmt          go to state 43
    PrintStmt        go to state 44


State 7

   10 Statement: NEWLINE .

    $default  reduce using rule 10 (Statement)


State 8

   78 PrintStmt: PRINT . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 48


State 9

   79 PrintStmt: PRINTLN . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 49


State 10

   69 IfStmt: IF . Condition Block
   70       | IF . Condition Block ELSE IfStmt
   71       | IF . Condition Block ELSE Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 50
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39
    Condition       go to state 51


State 11

   73 ForStmt: FOR . Condition Block
   74        | FOR . ForClause Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    SimpleStmt      go to state 52
    AssignmentStmt  go to state 27
    ExpressionStmt  go to state 28
    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 53
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39
    IncDecStmt      go to state 40
    Condition       go to state 54
    ForClause       go to state 55
    InitStmt        go to state 56


State 12

   11 DeclarationStmt: VAR . ID Type
   12                | VAR . ID Type ASSIGN Expression

    ID  shift, and go to state 57


State 13

   26 TypeName: INT .

    $default  reduce using rule 26 (TypeName)


State 14

   27 TypeName: FLOAT .

    $default  reduce using rule 27 (TypeName)


State 15

   29 TypeName: BOOL .

    $default  reduce using rule 29 (TypeName)


State 16

   28 TypeName: STRING .

    $default  reduce using rule 28 (TypeName)


State 17

   60 Literal: INT_LIT .

    $default  reduce using rule 60 (Literal)


State 18

   61 Literal: FLOAT_LIT .

    $default  reduce using rule 61 (Literal)


State 19

   63 Literal: STRING_LIT .

    $default  reduce using rule 63 (Literal)


State 20

   62 Literal: BOOL_LIT .

    $default  reduce using rule 62 (Literal)


State 21

   58 Operand: ID .

    $default  reduce using rule 58 (Operand)


State 22

    0 $accept: Program . $end

    $end  shift, and go to state 58


State 23

    1 Program: StatementList .
    2 StatementList: StatementList . Statement

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    LBRACE      shift, and go to state 6
    NEWLINE     shift, and go to state 7
    PRINT       shift, and go to state 8
    PRINTLN     shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    VAR         shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    $default  reduce using rule 1 (Program)

    Statement        go to state 59
    DeclarationStmt  go to state 25
    SimpleStmt       go to state 26
    AssignmentStmt   go to state 27
    ExpressionStmt   go to state 28
    Type             go to state 29
    TypeName         go to state 30
    ArrayType        go to state 31
    Expression       go to state 32
    UnaryExpr        go to state 33
    unary_op         go to state 34
    PrimaryExpr      go to state 35
    Operand          go to state 36
    Literal          go to state 37
    IndexExpr        go to state 38
    ConversionExpr   go to state 39
    IncDecStmt       go to state 40
    Block            go to state 41
    IfStmt           go to state 42
    ForStmt          go to state 43
    PrintStmt        go to state 44


State 24

    3 StatementList: Statement .

    $default  reduce using rule 3 (StatementList)


State 25

    4 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 60


State 26

    5 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 61


State 27

   13 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 13 (SimpleStmt)


State 28

   14 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 14 (SimpleStmt)


State 29

   65 ConversionExpr: Type . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 62


State 30

   24 Type: TypeName .

    $default  reduce using rule 24 (Type)


State 31

   25 Type: ArrayType .

    $default  reduce using rule 25 (Type)


State 32

   16 AssignmentStmt: Expression . assign_op Expression
   23 ExpressionStmt: Expression .
   32 Expression: Expression . binary_op Expression
   66 IncDecStmt: Expression . INC
   67           | Expression . DEC

    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    QUO         shift, and go to state 66
    REM         shift, and go to state 67
    INC         shift, and go to state 68
    DEC         shift, and go to state 69
    GTR         shift, and go to state 70
    LSS         shift, and go to state 71
    GEQ         shift, and go to state 72
    LEQ         shift, and go to state 73
    EQL         shift, and go to state 74
    NEQ         shift, and go to state 75
    ASSIGN      shift, and go to state 76
    ADD_ASSIGN  shift, and go to state 77
    SUB_ASSIGN  shift, and go to state 78
    MUL_ASSIGN  shift, and go to state 79
    QUO_ASSIGN  shift, and go to state 80
    REM_ASSIGN  shift, and go to state 81
    LAND        shift, and go to state 82
    LOR         shift, and go to state 83

    $default  reduce using rule 23 (ExpressionStmt)

    assign_op  go to state 84
    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 33

   31 Expression: UnaryExpr .

    $default  reduce using rule 31 (Expression)


State 34

   34 UnaryExpr: unary_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    UnaryExpr       go to state 89
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 35

   33 UnaryExpr: PrimaryExpr .
   64 IndexExpr: PrimaryExpr . LBRACK Expression RBRACK

    LBRACK  shift, and go to state 90

    $default  reduce using rule 33 (UnaryExpr)


State 36

   54 PrimaryExpr: Operand .

    $default  reduce using rule 54 (PrimaryExpr)


State 37

   57 Operand: Literal .

    $default  reduce using rule 57 (Operand)


State 38

   55 PrimaryExpr: IndexExpr .

    $default  reduce using rule 55 (PrimaryExpr)


State 39

   56 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 56 (PrimaryExpr)


State 40

   15 SimpleStmt: IncDecStmt .

    $default  reduce using rule 15 (SimpleStmt)


State 41

    6 Statement: Block . NEWLINE

    NEWLINE  shift, and go to state 91


State 42

    7 Statement: IfStmt . NEWLINE

    NEWLINE  shift, and go to state 92


State 43

    8 Statement: ForStmt . NEWLINE

    NEWLINE  shift, and go to state 93


State 44

    9 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 94


State 45

   32 Expression: Expression . binary_op Expression
   59 Operand: LPAREN Expression . RPAREN

    ADD     shift, and go to state 63
    SUB     shift, and go to state 64
    MUL     shift, and go to state 65
    QUO     shift, and go to state 66
    REM     shift, and go to state 67
    GTR     shift, and go to state 70
    LSS     shift, and go to state 71
    GEQ     shift, and go to state 72
    LEQ     shift, and go to state 73
    EQL     shift, and go to state 74
    NEQ     shift, and go to state 75
    LAND    shift, and go to state 82
    LOR     shift, and go to state 83
    RPAREN  shift, and go to state 95

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 46

   30 ArrayType: LBRACK Expression . RBRACK Type
   32 Expression: Expression . binary_op Expression

    ADD     shift, and go to state 63
    SUB     shift, and go to state 64
    MUL     shift, and go to state 65
    QUO     shift, and go to state 66
    REM     shift, and go to state 67
    GTR     shift, and go to state 70
    LSS     shift, and go to state 71
    GEQ     shift, and go to state 72
    LEQ     shift, and go to state 73
    EQL     shift, and go to state 74
    NEQ     shift, and go to state 75
    LAND    shift, and go to state 82
    LOR     shift, and go to state 83
    RBRACK  shift, and go to state 96

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 47

    2 StatementList: StatementList . Statement
   68 Block: LBRACE StatementList . RBRACE

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    LBRACE      shift, and go to state 6
    RBRACE      shift, and go to state 97
    NEWLINE     shift, and go to state 7
    PRINT       shift, and go to state 8
    PRINTLN     shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    VAR         shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Statement        go to state 59
    DeclarationStmt  go to state 25
    SimpleStmt       go to state 26
    AssignmentStmt   go to state 27
    ExpressionStmt   go to state 28
    Type             go to state 29
    TypeName         go to state 30
    ArrayType        go to state 31
    Expression       go to state 32
    UnaryExpr        go to state 33
    unary_op         go to state 34
    PrimaryExpr      go to state 35
    Operand          go to state 36
    Literal          go to state 37
    IndexExpr        go to state 38
    ConversionExpr   go to state 39
    IncDecStmt       go to state 40
    Block            go to state 41
    IfStmt           go to state 42
    ForStmt          go to state 43
    PrintStmt        go to state 44


State 48

   78 PrintStmt: PRINT LPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 98
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 49

   79 PrintStmt: PRINTLN LPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 99
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 50

   32 Expression: Expression . binary_op Expression
   72 Condition: Expression .

    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    QUO   shift, and go to state 66
    REM   shift, and go to state 67
    GTR   shift, and go to state 70
    LSS   shift, and go to state 71
    GEQ   shift, and go to state 72
    LEQ   shift, and go to state 73
    EQL   shift, and go to state 74
    NEQ   shift, and go to state 75
    LAND  shift, and go to state 82
    LOR   shift, and go to state 83

    $default  reduce using rule 72 (Condition)

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 51

   69 IfStmt: IF Condition . Block
   70       | IF Condition . Block ELSE IfStmt
   71       | IF Condition . Block ELSE Block

    LBRACE  shift, and go to state 6

    Block  go to state 100


State 52

   76 InitStmt: SimpleStmt .

    $default  reduce using rule 76 (InitStmt)


State 53

   16 AssignmentStmt: Expression . assign_op Expression
   23 ExpressionStmt: Expression .
   32 Expression: Expression . binary_op Expression
   66 IncDecStmt: Expression . INC
   67           | Expression . DEC
   72 Condition: Expression .

    ADD         shift, and go to state 63
    SUB         shift, and go to state 64
    MUL         shift, and go to state 65
    QUO         shift, and go to state 66
    REM         shift, and go to state 67
    INC         shift, and go to state 68
    DEC         shift, and go to state 69
    GTR         shift, and go to state 70
    LSS         shift, and go to state 71
    GEQ         shift, and go to state 72
    LEQ         shift, and go to state 73
    EQL         shift, and go to state 74
    NEQ         shift, and go to state 75
    ASSIGN      shift, and go to state 76
    ADD_ASSIGN  shift, and go to state 77
    SUB_ASSIGN  shift, and go to state 78
    MUL_ASSIGN  shift, and go to state 79
    QUO_ASSIGN  shift, and go to state 80
    REM_ASSIGN  shift, and go to state 81
    LAND        shift, and go to state 82
    LOR         shift, and go to state 83

    LBRACE    reduce using rule 72 (Condition)
    $default  reduce using rule 23 (ExpressionStmt)

    assign_op  go to state 84
    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 54

   73 ForStmt: FOR Condition . Block

    LBRACE  shift, and go to state 6

    Block  go to state 101


State 55

   74 ForStmt: FOR ForClause . Block

    LBRACE  shift, and go to state 6

    Block  go to state 102


State 56

   75 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 103


State 57

   11 DeclarationStmt: VAR ID . Type
   12                | VAR ID . Type ASSIGN Expression

    LBRACK  shift, and go to state 5
    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16

    Type       go to state 104
    TypeName   go to state 30
    ArrayType  go to state 31


State 58

    0 $accept: Program $end .

    $default  accept


State 59

    2 StatementList: StatementList Statement .

    $default  reduce using rule 2 (StatementList)


State 60

    4 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 4 (Statement)


State 61

    5 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 5 (Statement)


State 62

   65 ConversionExpr: Type LPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 105
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 63

   46 add_op: ADD .

    $default  reduce using rule 46 (add_op)


State 64

   47 add_op: SUB .

    $default  reduce using rule 47 (add_op)


State 65

   48 mul_op: MUL .

    $default  reduce using rule 48 (mul_op)


State 66

   49 mul_op: QUO .

    $default  reduce using rule 49 (mul_op)


State 67

   50 mul_op: REM .

    $default  reduce using rule 50 (mul_op)


State 68

   66 IncDecStmt: Expression INC .

    $default  reduce using rule 66 (IncDecStmt)


State 69

   67 IncDecStmt: Expression DEC .

    $default  reduce using rule 67 (IncDecStmt)


State 70

   44 cmp_op: GTR .

    $default  reduce using rule 44 (cmp_op)


State 71

   42 cmp_op: LSS .

    $default  reduce using rule 42 (cmp_op)


State 72

   45 cmp_op: GEQ .

    $default  reduce using rule 45 (cmp_op)


State 73

   43 cmp_op: LEQ .

    $default  reduce using rule 43 (cmp_op)


State 74

   40 cmp_op: EQL .

    $default  reduce using rule 40 (cmp_op)


State 75

   41 cmp_op: NEQ .

    $default  reduce using rule 41 (cmp_op)


State 76

   17 assign_op: ASSIGN .

    $default  reduce using rule 17 (assign_op)


State 77

   18 assign_op: ADD_ASSIGN .

    $default  reduce using rule 18 (assign_op)


State 78

   19 assign_op: SUB_ASSIGN .

    $default  reduce using rule 19 (assign_op)


State 79

   20 assign_op: MUL_ASSIGN .

    $default  reduce using rule 20 (assign_op)


State 80

   21 assign_op: QUO_ASSIGN .

    $default  reduce using rule 21 (assign_op)


State 81

   22 assign_op: REM_ASSIGN .

    $default  reduce using rule 22 (assign_op)


State 82

   36 binary_op: LAND .

    $default  reduce using rule 36 (binary_op)


State 83

   35 binary_op: LOR .

    $default  reduce using rule 35 (binary_op)


State 84

   16 AssignmentStmt: Expression assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 106
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 85

   32 Expression: Expression binary_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 107
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 86

   37 binary_op: cmp_op .

    $default  reduce using rule 37 (binary_op)


State 87

   38 binary_op: add_op .

    $default  reduce using rule 38 (binary_op)


State 88

   39 binary_op: mul_op .

    $default  reduce using rule 39 (binary_op)


State 89

   34 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 34 (UnaryExpr)


State 90

   64 IndexExpr: PrimaryExpr LBRACK . Expression RBRACK

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 108
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 91

    6 Statement: Block NEWLINE .

    $default  reduce using rule 6 (Statement)


State 92

    7 Statement: IfStmt NEWLINE .

    $default  reduce using rule 7 (Statement)


State 93

    8 Statement: ForStmt NEWLINE .

    $default  reduce using rule 8 (Statement)


State 94

    9 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 9 (Statement)


State 95

   59 Operand: LPAREN Expression RPAREN .

    $default  reduce using rule 59 (Operand)


State 96

   30 ArrayType: LBRACK Expression RBRACK . Type

    LBRACK  shift, and go to state 5
    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16

    Type       go to state 109
    TypeName   go to state 30
    ArrayType  go to state 31


State 97

   68 Block: LBRACE StatementList RBRACE .

    $default  reduce using rule 68 (Block)


State 98

   32 Expression: Expression . binary_op Expression
   78 PrintStmt: PRINT LPAREN Expression . RPAREN

    ADD     shift, and go to state 63
    SUB     shift, and go to state 64
    MUL     shift, and go to state 65
    QUO     shift, and go to state 66
    REM     shift, and go to state 67
    GTR     shift, and go to state 70
    LSS     shift, and go to state 71
    GEQ     shift, and go to state 72
    LEQ     shift, and go to state 73
    EQL     shift, and go to state 74
    NEQ     shift, and go to state 75
    LAND    shift, and go to state 82
    LOR     shift, and go to state 83
    RPAREN  shift, and go to state 110

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 99

   32 Expression: Expression . binary_op Expression
   79 PrintStmt: PRINTLN LPAREN Expression . RPAREN

    ADD     shift, and go to state 63
    SUB     shift, and go to state 64
    MUL     shift, and go to state 65
    QUO     shift, and go to state 66
    REM     shift, and go to state 67
    GTR     shift, and go to state 70
    LSS     shift, and go to state 71
    GEQ     shift, and go to state 72
    LEQ     shift, and go to state 73
    EQL     shift, and go to state 74
    NEQ     shift, and go to state 75
    LAND    shift, and go to state 82
    LOR     shift, and go to state 83
    RPAREN  shift, and go to state 111

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 100

   69 IfStmt: IF Condition Block .
   70       | IF Condition Block . ELSE IfStmt
   71       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 112

    $default  reduce using rule 69 (IfStmt)


State 101

   73 ForStmt: FOR Condition Block .

    $default  reduce using rule 73 (ForStmt)


State 102

   74 ForStmt: FOR ForClause Block .

    $default  reduce using rule 74 (ForStmt)


State 103

   75 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 50
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39
    Condition       go to state 113


State 104

   11 DeclarationStmt: VAR ID Type .
   12                | VAR ID Type . ASSIGN Expression

    ASSIGN  shift, and go to state 114

    $default  reduce using rule 11 (DeclarationStmt)


State 105

   32 Expression: Expression . binary_op Expression
   65 ConversionExpr: Type LPAREN Expression . RPAREN

    ADD     shift, and go to state 63
    SUB     shift, and go to state 64
    MUL     shift, and go to state 65
    QUO     shift, and go to state 66
    REM     shift, and go to state 67
    GTR     shift, and go to state 70
    LSS     shift, and go to state 71
    GEQ     shift, and go to state 72
    LEQ     shift, and go to state 73
    EQL     shift, and go to state 74
    NEQ     shift, and go to state 75
    LAND    shift, and go to state 82
    LOR     shift, and go to state 83
    RPAREN  shift, and go to state 115

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 106

   16 AssignmentStmt: Expression assign_op Expression .
   32 Expression: Expression . binary_op Expression

    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    QUO   shift, and go to state 66
    REM   shift, and go to state 67
    GTR   shift, and go to state 70
    LSS   shift, and go to state 71
    GEQ   shift, and go to state 72
    LEQ   shift, and go to state 73
    EQL   shift, and go to state 74
    NEQ   shift, and go to state 75
    LAND  shift, and go to state 82
    LOR   shift, and go to state 83

    $default  reduce using rule 16 (AssignmentStmt)

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 107

   32 Expression: Expression . binary_op Expression
   32           | Expression binary_op Expression .

    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    QUO   shift, and go to state 66
    REM   shift, and go to state 67
    GTR   shift, and go to state 70
    LSS   shift, and go to state 71
    GEQ   shift, and go to state 72
    LEQ   shift, and go to state 73
    EQL   shift, and go to state 74
    NEQ   shift, and go to state 75
    LAND  shift, and go to state 82
    LOR   shift, and go to state 83

    ADD       [reduce using rule 32 (Expression)]
    SUB       [reduce using rule 32 (Expression)]
    MUL       [reduce using rule 32 (Expression)]
    QUO       [reduce using rule 32 (Expression)]
    REM       [reduce using rule 32 (Expression)]
    GTR       [reduce using rule 32 (Expression)]
    LSS       [reduce using rule 32 (Expression)]
    GEQ       [reduce using rule 32 (Expression)]
    LEQ       [reduce using rule 32 (Expression)]
    EQL       [reduce using rule 32 (Expression)]
    NEQ       [reduce using rule 32 (Expression)]
    LAND      [reduce using rule 32 (Expression)]
    LOR       [reduce using rule 32 (Expression)]
    $default  reduce using rule 32 (Expression)

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 108

   32 Expression: Expression . binary_op Expression
   64 IndexExpr: PrimaryExpr LBRACK Expression . RBRACK

    ADD     shift, and go to state 63
    SUB     shift, and go to state 64
    MUL     shift, and go to state 65
    QUO     shift, and go to state 66
    REM     shift, and go to state 67
    GTR     shift, and go to state 70
    LSS     shift, and go to state 71
    GEQ     shift, and go to state 72
    LEQ     shift, and go to state 73
    EQL     shift, and go to state 74
    NEQ     shift, and go to state 75
    LAND    shift, and go to state 82
    LOR     shift, and go to state 83
    RBRACK  shift, and go to state 116

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 109

   30 ArrayType: LBRACK Expression RBRACK Type .

    $default  reduce using rule 30 (ArrayType)


State 110

   78 PrintStmt: PRINT LPAREN Expression RPAREN .

    $default  reduce using rule 78 (PrintStmt)


State 111

   79 PrintStmt: PRINTLN LPAREN Expression RPAREN .

    $default  reduce using rule 79 (PrintStmt)


State 112

   70 IfStmt: IF Condition Block ELSE . IfStmt
   71       | IF Condition Block ELSE . Block

    LBRACE  shift, and go to state 6
    IF      shift, and go to state 10

    Block   go to state 117
    IfStmt  go to state 118


State 113

   75 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 119


State 114

   12 DeclarationStmt: VAR ID Type ASSIGN . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 120
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39


State 115

   65 ConversionExpr: Type LPAREN Expression RPAREN .

    $default  reduce using rule 65 (ConversionExpr)


State 116

   64 IndexExpr: PrimaryExpr LBRACK Expression RBRACK .

    $default  reduce using rule 64 (IndexExpr)


State 117

   71 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 71 (IfStmt)


State 118

   70 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 70 (IfStmt)


State 119

   75 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    ID          shift, and go to state 21

    SimpleStmt      go to state 121
    AssignmentStmt  go to state 27
    ExpressionStmt  go to state 28
    Type            go to state 29
    TypeName        go to state 30
    ArrayType       go to state 31
    Expression      go to state 32
    UnaryExpr       go to state 33
    unary_op        go to state 34
    PrimaryExpr     go to state 35
    Operand         go to state 36
    Literal         go to state 37
    IndexExpr       go to state 38
    ConversionExpr  go to state 39
    IncDecStmt      go to state 40
    PostStmt        go to state 122


State 120

   12 DeclarationStmt: VAR ID Type ASSIGN Expression .
   32 Expression: Expression . binary_op Expression

    ADD   shift, and go to state 63
    SUB   shift, and go to state 64
    MUL   shift, and go to state 65
    QUO   shift, and go to state 66
    REM   shift, and go to state 67
    GTR   shift, and go to state 70
    LSS   shift, and go to state 71
    GEQ   shift, and go to state 72
    LEQ   shift, and go to state 73
    EQL   shift, and go to state 74
    NEQ   shift, and go to state 75
    LAND  shift, and go to state 82
    LOR   shift, and go to state 83

    $default  reduce using rule 12 (DeclarationStmt)

    binary_op  go to state 85
    cmp_op     go to state 86
    add_op     go to state 87
    mul_op     go to state 88


State 121

   77 PostStmt: SimpleStmt .

    $default  reduce using rule 77 (PostStmt)


State 122

   75 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 75 (ForClause)
