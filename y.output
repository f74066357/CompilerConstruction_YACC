Terminals unused in grammar

   COMMA


State 109 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: StatementList Statement
    3              | Statement

    4 Statement: DeclarationStmt NEWLINE
    5          | SimpleStmt NEWLINE
    6          | Block NEWLINE
    7          | IfStmt NEWLINE
    8          | ForStmt NEWLINE
    9          | PrintStmt NEWLINE
   10          | NEWLINE

   11 DeclarationStmt: VAR ID Type
   12                | VAR ID Type ASSIGN Expression

   13 SimpleStmt: AssignmentStmt
   14           | ExpressionStmt
   15           | IncDecStmt

   16 AssignmentStmt: Expression assign_op Expression

   17 assign_op: ASSIGN
   18          | ADD_ASSIGN
   19          | SUB_ASSIGN
   20          | MUL_ASSIGN
   21          | QUO_ASSIGN
   22          | REM_ASSIGN

   23 ExpressionStmt: Expression

   24 Type: TypeName
   25     | ArrayType

   26 TypeName: INT
   27         | FLOAT
   28         | STRING
   29         | BOOL

   30 ArrayType: LBRACK Expression RBRACK Type

   31 Expression: UnaryExpr
   32           | Expression binary_op Expression

   33 UnaryExpr: PrimaryExpr
   34          | unary_op UnaryExpr

   35 binary_op: add_op

   36 cmp_op: EQL
   37       | NEQ
   38       | LSS
   39       | LEQ
   40       | GTR
   41       | GEQ
   42       | l_op

   43 l_op: LOR
   44     | LAND

   45 add_op: ADD
   46       | SUB
   47       | mul_op

   48 mul_op: MUL
   49       | QUO
   50       | REM
   51       | cmp_op

   52 unary_op: ADD
   53         | SUB
   54         | NOT

   55 PrimaryExpr: Operand
   56            | IndexExpr
   57            | ConversionExpr

   58 Operand: Literal
   59        | ID
   60        | LPAREN Expression RPAREN

   61 Literal: INT_LIT
   62        | FLOAT_LIT
   63        | TRUE
   64        | FALSE
   65        | STRING_LIT

   66 IndexExpr: PrimaryExpr LBRACK Expression RBRACK

   67 ConversionExpr: Type LPAREN Expression RPAREN

   68 IncDecStmt: Expression INC
   69           | Expression DEC

   70 Block: LBRACE1 StatementList RBRACE1

   71 LBRACE1: LBRACE

   72 RBRACE1: RBRACE

   73 IfStmt: IF Condition Block
   74       | IF Condition Block ELSE IfStmt
   75       | IF Condition Block ELSE Block

   76 Condition: Expression

   77 ForStmt: FOR Condition Block
   78        | FOR ForClause Block

   79 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   80 InitStmt: SimpleStmt

   81 PostStmt: SimpleStmt

   82 PrintStmt: PRINT LPAREN Expression RPAREN
   83          | PRINTLN LPAREN Expression RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 45 52
SUB (259) 46 53
MUL (260) 48
QUO (261) 49
REM (262) 50
INC (263) 68
DEC (264) 69
GTR (265) 40
LSS (266) 38
GEQ (267) 41
LEQ (268) 39
EQL (269) 36
NEQ (270) 37
ASSIGN (271) 12 17
ADD_ASSIGN (272) 18
SUB_ASSIGN (273) 19
MUL_ASSIGN (274) 20
QUO_ASSIGN (275) 21
REM_ASSIGN (276) 22
LAND (277) 44
LOR (278) 43
NOT (279) 54
LPAREN (280) 60 67 82 83
RPAREN (281) 60 67 82 83
LBRACK (282) 30 66
RBRACK (283) 30 66
LBRACE (284) 71
RBRACE (285) 72
COMMA (286)
SEMICOLON (287) 79
NEWLINE (288) 4 5 6 7 8 9 10
PRINT (289) 82
PRINTLN (290) 83
IF (291) 73 74 75
ELSE (292) 74 75
FOR (293) 77 78
VAR (294) 11 12
INT (295) 26
FLOAT (296) 27
BOOL (297) 29
STRING (298) 28
INT_LIT (299) 61
FLOAT_LIT (300) 62
STRING_LIT (301) 65
ID (302) 11 12 59
TRUE (303) 63
FALSE (304) 64


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Program (51)
    on left: 1, on right: 0
StatementList (52)
    on left: 2 3, on right: 1 2 70
Statement (53)
    on left: 4 5 6 7 8 9 10, on right: 2 3
DeclarationStmt (54)
    on left: 11 12, on right: 4
SimpleStmt (55)
    on left: 13 14 15, on right: 5 80 81
AssignmentStmt (56)
    on left: 16, on right: 13
assign_op (57)
    on left: 17 18 19 20 21 22, on right: 16
ExpressionStmt (58)
    on left: 23, on right: 14
Type (59)
    on left: 24 25, on right: 11 12 30 67
TypeName (60)
    on left: 26 27 28 29, on right: 24
ArrayType (61)
    on left: 30, on right: 25
Expression (62)
    on left: 31 32, on right: 12 16 23 30 32 60 66 67 68 69 76 82 83
UnaryExpr (63)
    on left: 33 34, on right: 31 34
binary_op (64)
    on left: 35, on right: 32
cmp_op (65)
    on left: 36 37 38 39 40 41 42, on right: 51
l_op (66)
    on left: 43 44, on right: 42
add_op (67)
    on left: 45 46 47, on right: 35
mul_op (68)
    on left: 48 49 50 51, on right: 47
unary_op (69)
    on left: 52 53 54, on right: 34
PrimaryExpr (70)
    on left: 55 56 57, on right: 33 66
Operand (71)
    on left: 58 59 60, on right: 55
Literal (72)
    on left: 61 62 63 64 65, on right: 58
IndexExpr (73)
    on left: 66, on right: 56
ConversionExpr (74)
    on left: 67, on right: 57
IncDecStmt (75)
    on left: 68 69, on right: 15
Block (76)
    on left: 70, on right: 6 73 74 75 77 78
LBRACE1 (77)
    on left: 71, on right: 70
RBRACE1 (78)
    on left: 72, on right: 70
IfStmt (79)
    on left: 73 74 75, on right: 7 74
Condition (80)
    on left: 76, on right: 73 74 75 77 79
ForStmt (81)
    on left: 77 78, on right: 8
ForClause (82)
    on left: 79, on right: 78
InitStmt (83)
    on left: 80, on right: 79
PostStmt (84)
    on left: 81, on right: 79
PrintStmt (85)
    on left: 82 83, on right: 9


State 0

    0 $accept: . Program $end

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    LBRACE      shift, and go to state 6
    NEWLINE     shift, and go to state 7
    PRINT       shift, and go to state 8
    PRINTLN     shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    VAR         shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Program          go to state 23
    StatementList    go to state 24
    Statement        go to state 25
    DeclarationStmt  go to state 26
    SimpleStmt       go to state 27
    AssignmentStmt   go to state 28
    ExpressionStmt   go to state 29
    Type             go to state 30
    TypeName         go to state 31
    ArrayType        go to state 32
    Expression       go to state 33
    UnaryExpr        go to state 34
    unary_op         go to state 35
    PrimaryExpr      go to state 36
    Operand          go to state 37
    Literal          go to state 38
    IndexExpr        go to state 39
    ConversionExpr   go to state 40
    IncDecStmt       go to state 41
    Block            go to state 42
    LBRACE1          go to state 43
    IfStmt           go to state 44
    ForStmt          go to state 45
    PrintStmt        go to state 46


State 1

   52 unary_op: ADD .

    $default  reduce using rule 52 (unary_op)


State 2

   53 unary_op: SUB .

    $default  reduce using rule 53 (unary_op)


State 3

   54 unary_op: NOT .

    $default  reduce using rule 54 (unary_op)


State 4

   60 Operand: LPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 47
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 5

   30 ArrayType: LBRACK . Expression RBRACK Type

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 48
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 6

   71 LBRACE1: LBRACE .

    $default  reduce using rule 71 (LBRACE1)


State 7

   10 Statement: NEWLINE .

    $default  reduce using rule 10 (Statement)


State 8

   82 PrintStmt: PRINT . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 49


State 9

   83 PrintStmt: PRINTLN . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 50


State 10

   73 IfStmt: IF . Condition Block
   74       | IF . Condition Block ELSE IfStmt
   75       | IF . Condition Block ELSE Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 51
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40
    Condition       go to state 52


State 11

   77 ForStmt: FOR . Condition Block
   78        | FOR . ForClause Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    SimpleStmt      go to state 53
    AssignmentStmt  go to state 28
    ExpressionStmt  go to state 29
    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 54
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40
    IncDecStmt      go to state 41
    Condition       go to state 55
    ForClause       go to state 56
    InitStmt        go to state 57


State 12

   11 DeclarationStmt: VAR . ID Type
   12                | VAR . ID Type ASSIGN Expression

    ID  shift, and go to state 58


State 13

   26 TypeName: INT .

    $default  reduce using rule 26 (TypeName)


State 14

   27 TypeName: FLOAT .

    $default  reduce using rule 27 (TypeName)


State 15

   29 TypeName: BOOL .

    $default  reduce using rule 29 (TypeName)


State 16

   28 TypeName: STRING .

    $default  reduce using rule 28 (TypeName)


State 17

   61 Literal: INT_LIT .

    $default  reduce using rule 61 (Literal)


State 18

   62 Literal: FLOAT_LIT .

    $default  reduce using rule 62 (Literal)


State 19

   65 Literal: STRING_LIT .

    $default  reduce using rule 65 (Literal)


State 20

   59 Operand: ID .

    $default  reduce using rule 59 (Operand)


State 21

   63 Literal: TRUE .

    $default  reduce using rule 63 (Literal)


State 22

   64 Literal: FALSE .

    $default  reduce using rule 64 (Literal)


State 23

    0 $accept: Program . $end

    $end  shift, and go to state 59


State 24

    1 Program: StatementList .
    2 StatementList: StatementList . Statement

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    LBRACE      shift, and go to state 6
    NEWLINE     shift, and go to state 7
    PRINT       shift, and go to state 8
    PRINTLN     shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    VAR         shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    $default  reduce using rule 1 (Program)

    Statement        go to state 60
    DeclarationStmt  go to state 26
    SimpleStmt       go to state 27
    AssignmentStmt   go to state 28
    ExpressionStmt   go to state 29
    Type             go to state 30
    TypeName         go to state 31
    ArrayType        go to state 32
    Expression       go to state 33
    UnaryExpr        go to state 34
    unary_op         go to state 35
    PrimaryExpr      go to state 36
    Operand          go to state 37
    Literal          go to state 38
    IndexExpr        go to state 39
    ConversionExpr   go to state 40
    IncDecStmt       go to state 41
    Block            go to state 42
    LBRACE1          go to state 43
    IfStmt           go to state 44
    ForStmt          go to state 45
    PrintStmt        go to state 46


State 25

    3 StatementList: Statement .

    $default  reduce using rule 3 (StatementList)


State 26

    4 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 61


State 27

    5 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 62


State 28

   13 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 13 (SimpleStmt)


State 29

   14 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 14 (SimpleStmt)


State 30

   67 ConversionExpr: Type . LPAREN Expression RPAREN

    LPAREN  shift, and go to state 63


State 31

   24 Type: TypeName .

    $default  reduce using rule 24 (Type)


State 32

   25 Type: ArrayType .

    $default  reduce using rule 25 (Type)


State 33

   16 AssignmentStmt: Expression . assign_op Expression
   23 ExpressionStmt: Expression .
   32 Expression: Expression . binary_op Expression
   68 IncDecStmt: Expression . INC
   69           | Expression . DEC

    ADD         shift, and go to state 64
    SUB         shift, and go to state 65
    MUL         shift, and go to state 66
    QUO         shift, and go to state 67
    REM         shift, and go to state 68
    INC         shift, and go to state 69
    DEC         shift, and go to state 70
    GTR         shift, and go to state 71
    LSS         shift, and go to state 72
    GEQ         shift, and go to state 73
    LEQ         shift, and go to state 74
    EQL         shift, and go to state 75
    NEQ         shift, and go to state 76
    ASSIGN      shift, and go to state 77
    ADD_ASSIGN  shift, and go to state 78
    SUB_ASSIGN  shift, and go to state 79
    MUL_ASSIGN  shift, and go to state 80
    QUO_ASSIGN  shift, and go to state 81
    REM_ASSIGN  shift, and go to state 82
    LAND        shift, and go to state 83
    LOR         shift, and go to state 84

    $default  reduce using rule 23 (ExpressionStmt)

    assign_op  go to state 85
    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 34

   31 Expression: UnaryExpr .

    $default  reduce using rule 31 (Expression)


State 35

   34 UnaryExpr: unary_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    UnaryExpr       go to state 91
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 36

   33 UnaryExpr: PrimaryExpr .
   66 IndexExpr: PrimaryExpr . LBRACK Expression RBRACK

    LBRACK  shift, and go to state 92

    $default  reduce using rule 33 (UnaryExpr)


State 37

   55 PrimaryExpr: Operand .

    $default  reduce using rule 55 (PrimaryExpr)


State 38

   58 Operand: Literal .

    $default  reduce using rule 58 (Operand)


State 39

   56 PrimaryExpr: IndexExpr .

    $default  reduce using rule 56 (PrimaryExpr)


State 40

   57 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 57 (PrimaryExpr)


State 41

   15 SimpleStmt: IncDecStmt .

    $default  reduce using rule 15 (SimpleStmt)


State 42

    6 Statement: Block . NEWLINE

    NEWLINE  shift, and go to state 93


State 43

   70 Block: LBRACE1 . StatementList RBRACE1

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    LBRACE      shift, and go to state 6
    NEWLINE     shift, and go to state 7
    PRINT       shift, and go to state 8
    PRINTLN     shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    VAR         shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    StatementList    go to state 94
    Statement        go to state 25
    DeclarationStmt  go to state 26
    SimpleStmt       go to state 27
    AssignmentStmt   go to state 28
    ExpressionStmt   go to state 29
    Type             go to state 30
    TypeName         go to state 31
    ArrayType        go to state 32
    Expression       go to state 33
    UnaryExpr        go to state 34
    unary_op         go to state 35
    PrimaryExpr      go to state 36
    Operand          go to state 37
    Literal          go to state 38
    IndexExpr        go to state 39
    ConversionExpr   go to state 40
    IncDecStmt       go to state 41
    Block            go to state 42
    LBRACE1          go to state 43
    IfStmt           go to state 44
    ForStmt          go to state 45
    PrintStmt        go to state 46


State 44

    7 Statement: IfStmt . NEWLINE

    NEWLINE  shift, and go to state 95


State 45

    8 Statement: ForStmt . NEWLINE

    NEWLINE  shift, and go to state 96


State 46

    9 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 97


State 47

   32 Expression: Expression . binary_op Expression
   60 Operand: LPAREN Expression . RPAREN

    ADD     shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    QUO     shift, and go to state 67
    REM     shift, and go to state 68
    GTR     shift, and go to state 71
    LSS     shift, and go to state 72
    GEQ     shift, and go to state 73
    LEQ     shift, and go to state 74
    EQL     shift, and go to state 75
    NEQ     shift, and go to state 76
    LAND    shift, and go to state 83
    LOR     shift, and go to state 84
    RPAREN  shift, and go to state 98

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 48

   30 ArrayType: LBRACK Expression . RBRACK Type
   32 Expression: Expression . binary_op Expression

    ADD     shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    QUO     shift, and go to state 67
    REM     shift, and go to state 68
    GTR     shift, and go to state 71
    LSS     shift, and go to state 72
    GEQ     shift, and go to state 73
    LEQ     shift, and go to state 74
    EQL     shift, and go to state 75
    NEQ     shift, and go to state 76
    LAND    shift, and go to state 83
    LOR     shift, and go to state 84
    RBRACK  shift, and go to state 99

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 49

   82 PrintStmt: PRINT LPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 100
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 50

   83 PrintStmt: PRINTLN LPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 101
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 51

   32 Expression: Expression . binary_op Expression
   76 Condition: Expression .

    ADD   shift, and go to state 64
    SUB   shift, and go to state 65
    MUL   shift, and go to state 66
    QUO   shift, and go to state 67
    REM   shift, and go to state 68
    GTR   shift, and go to state 71
    LSS   shift, and go to state 72
    GEQ   shift, and go to state 73
    LEQ   shift, and go to state 74
    EQL   shift, and go to state 75
    NEQ   shift, and go to state 76
    LAND  shift, and go to state 83
    LOR   shift, and go to state 84

    $default  reduce using rule 76 (Condition)

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 52

   73 IfStmt: IF Condition . Block
   74       | IF Condition . Block ELSE IfStmt
   75       | IF Condition . Block ELSE Block

    LBRACE  shift, and go to state 6

    Block    go to state 102
    LBRACE1  go to state 43


State 53

   80 InitStmt: SimpleStmt .

    $default  reduce using rule 80 (InitStmt)


State 54

   16 AssignmentStmt: Expression . assign_op Expression
   23 ExpressionStmt: Expression .
   32 Expression: Expression . binary_op Expression
   68 IncDecStmt: Expression . INC
   69           | Expression . DEC
   76 Condition: Expression .

    ADD         shift, and go to state 64
    SUB         shift, and go to state 65
    MUL         shift, and go to state 66
    QUO         shift, and go to state 67
    REM         shift, and go to state 68
    INC         shift, and go to state 69
    DEC         shift, and go to state 70
    GTR         shift, and go to state 71
    LSS         shift, and go to state 72
    GEQ         shift, and go to state 73
    LEQ         shift, and go to state 74
    EQL         shift, and go to state 75
    NEQ         shift, and go to state 76
    ASSIGN      shift, and go to state 77
    ADD_ASSIGN  shift, and go to state 78
    SUB_ASSIGN  shift, and go to state 79
    MUL_ASSIGN  shift, and go to state 80
    QUO_ASSIGN  shift, and go to state 81
    REM_ASSIGN  shift, and go to state 82
    LAND        shift, and go to state 83
    LOR         shift, and go to state 84

    LBRACE    reduce using rule 76 (Condition)
    $default  reduce using rule 23 (ExpressionStmt)

    assign_op  go to state 85
    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 55

   77 ForStmt: FOR Condition . Block

    LBRACE  shift, and go to state 6

    Block    go to state 103
    LBRACE1  go to state 43


State 56

   78 ForStmt: FOR ForClause . Block

    LBRACE  shift, and go to state 6

    Block    go to state 104
    LBRACE1  go to state 43


State 57

   79 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 105


State 58

   11 DeclarationStmt: VAR ID . Type
   12                | VAR ID . Type ASSIGN Expression

    LBRACK  shift, and go to state 5
    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16

    Type       go to state 106
    TypeName   go to state 31
    ArrayType  go to state 32


State 59

    0 $accept: Program $end .

    $default  accept


State 60

    2 StatementList: StatementList Statement .

    $default  reduce using rule 2 (StatementList)


State 61

    4 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 4 (Statement)


State 62

    5 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 5 (Statement)


State 63

   67 ConversionExpr: Type LPAREN . Expression RPAREN

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 107
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 64

   45 add_op: ADD .

    $default  reduce using rule 45 (add_op)


State 65

   46 add_op: SUB .

    $default  reduce using rule 46 (add_op)


State 66

   48 mul_op: MUL .

    $default  reduce using rule 48 (mul_op)


State 67

   49 mul_op: QUO .

    $default  reduce using rule 49 (mul_op)


State 68

   50 mul_op: REM .

    $default  reduce using rule 50 (mul_op)


State 69

   68 IncDecStmt: Expression INC .

    $default  reduce using rule 68 (IncDecStmt)


State 70

   69 IncDecStmt: Expression DEC .

    $default  reduce using rule 69 (IncDecStmt)


State 71

   40 cmp_op: GTR .

    $default  reduce using rule 40 (cmp_op)


State 72

   38 cmp_op: LSS .

    $default  reduce using rule 38 (cmp_op)


State 73

   41 cmp_op: GEQ .

    $default  reduce using rule 41 (cmp_op)


State 74

   39 cmp_op: LEQ .

    $default  reduce using rule 39 (cmp_op)


State 75

   36 cmp_op: EQL .

    $default  reduce using rule 36 (cmp_op)


State 76

   37 cmp_op: NEQ .

    $default  reduce using rule 37 (cmp_op)


State 77

   17 assign_op: ASSIGN .

    $default  reduce using rule 17 (assign_op)


State 78

   18 assign_op: ADD_ASSIGN .

    $default  reduce using rule 18 (assign_op)


State 79

   19 assign_op: SUB_ASSIGN .

    $default  reduce using rule 19 (assign_op)


State 80

   20 assign_op: MUL_ASSIGN .

    $default  reduce using rule 20 (assign_op)


State 81

   21 assign_op: QUO_ASSIGN .

    $default  reduce using rule 21 (assign_op)


State 82

   22 assign_op: REM_ASSIGN .

    $default  reduce using rule 22 (assign_op)


State 83

   44 l_op: LAND .

    $default  reduce using rule 44 (l_op)


State 84

   43 l_op: LOR .

    $default  reduce using rule 43 (l_op)


State 85

   16 AssignmentStmt: Expression assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 108
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 86

   32 Expression: Expression binary_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 109
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 87

   51 mul_op: cmp_op .

    $default  reduce using rule 51 (mul_op)


State 88

   42 cmp_op: l_op .

    $default  reduce using rule 42 (cmp_op)


State 89

   35 binary_op: add_op .

    $default  reduce using rule 35 (binary_op)


State 90

   47 add_op: mul_op .

    $default  reduce using rule 47 (add_op)


State 91

   34 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 34 (UnaryExpr)


State 92

   66 IndexExpr: PrimaryExpr LBRACK . Expression RBRACK

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 110
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 93

    6 Statement: Block NEWLINE .

    $default  reduce using rule 6 (Statement)


State 94

    2 StatementList: StatementList . Statement
   70 Block: LBRACE1 StatementList . RBRACE1

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    LBRACE      shift, and go to state 6
    RBRACE      shift, and go to state 111
    NEWLINE     shift, and go to state 7
    PRINT       shift, and go to state 8
    PRINTLN     shift, and go to state 9
    IF          shift, and go to state 10
    FOR         shift, and go to state 11
    VAR         shift, and go to state 12
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Statement        go to state 60
    DeclarationStmt  go to state 26
    SimpleStmt       go to state 27
    AssignmentStmt   go to state 28
    ExpressionStmt   go to state 29
    Type             go to state 30
    TypeName         go to state 31
    ArrayType        go to state 32
    Expression       go to state 33
    UnaryExpr        go to state 34
    unary_op         go to state 35
    PrimaryExpr      go to state 36
    Operand          go to state 37
    Literal          go to state 38
    IndexExpr        go to state 39
    ConversionExpr   go to state 40
    IncDecStmt       go to state 41
    Block            go to state 42
    LBRACE1          go to state 43
    RBRACE1          go to state 112
    IfStmt           go to state 44
    ForStmt          go to state 45
    PrintStmt        go to state 46


State 95

    7 Statement: IfStmt NEWLINE .

    $default  reduce using rule 7 (Statement)


State 96

    8 Statement: ForStmt NEWLINE .

    $default  reduce using rule 8 (Statement)


State 97

    9 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 9 (Statement)


State 98

   60 Operand: LPAREN Expression RPAREN .

    $default  reduce using rule 60 (Operand)


State 99

   30 ArrayType: LBRACK Expression RBRACK . Type

    LBRACK  shift, and go to state 5
    INT     shift, and go to state 13
    FLOAT   shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16

    Type       go to state 113
    TypeName   go to state 31
    ArrayType  go to state 32


State 100

   32 Expression: Expression . binary_op Expression
   82 PrintStmt: PRINT LPAREN Expression . RPAREN

    ADD     shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    QUO     shift, and go to state 67
    REM     shift, and go to state 68
    GTR     shift, and go to state 71
    LSS     shift, and go to state 72
    GEQ     shift, and go to state 73
    LEQ     shift, and go to state 74
    EQL     shift, and go to state 75
    NEQ     shift, and go to state 76
    LAND    shift, and go to state 83
    LOR     shift, and go to state 84
    RPAREN  shift, and go to state 114

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 101

   32 Expression: Expression . binary_op Expression
   83 PrintStmt: PRINTLN LPAREN Expression . RPAREN

    ADD     shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    QUO     shift, and go to state 67
    REM     shift, and go to state 68
    GTR     shift, and go to state 71
    LSS     shift, and go to state 72
    GEQ     shift, and go to state 73
    LEQ     shift, and go to state 74
    EQL     shift, and go to state 75
    NEQ     shift, and go to state 76
    LAND    shift, and go to state 83
    LOR     shift, and go to state 84
    RPAREN  shift, and go to state 115

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 102

   73 IfStmt: IF Condition Block .
   74       | IF Condition Block . ELSE IfStmt
   75       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 116

    $default  reduce using rule 73 (IfStmt)


State 103

   77 ForStmt: FOR Condition Block .

    $default  reduce using rule 77 (ForStmt)


State 104

   78 ForStmt: FOR ForClause Block .

    $default  reduce using rule 78 (ForStmt)


State 105

   79 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 51
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40
    Condition       go to state 117


State 106

   11 DeclarationStmt: VAR ID Type .
   12                | VAR ID Type . ASSIGN Expression

    ASSIGN  shift, and go to state 118

    $default  reduce using rule 11 (DeclarationStmt)


State 107

   32 Expression: Expression . binary_op Expression
   67 ConversionExpr: Type LPAREN Expression . RPAREN

    ADD     shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    QUO     shift, and go to state 67
    REM     shift, and go to state 68
    GTR     shift, and go to state 71
    LSS     shift, and go to state 72
    GEQ     shift, and go to state 73
    LEQ     shift, and go to state 74
    EQL     shift, and go to state 75
    NEQ     shift, and go to state 76
    LAND    shift, and go to state 83
    LOR     shift, and go to state 84
    RPAREN  shift, and go to state 119

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 108

   16 AssignmentStmt: Expression assign_op Expression .
   32 Expression: Expression . binary_op Expression

    ADD   shift, and go to state 64
    SUB   shift, and go to state 65
    MUL   shift, and go to state 66
    QUO   shift, and go to state 67
    REM   shift, and go to state 68
    GTR   shift, and go to state 71
    LSS   shift, and go to state 72
    GEQ   shift, and go to state 73
    LEQ   shift, and go to state 74
    EQL   shift, and go to state 75
    NEQ   shift, and go to state 76
    LAND  shift, and go to state 83
    LOR   shift, and go to state 84

    $default  reduce using rule 16 (AssignmentStmt)

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 109

   32 Expression: Expression . binary_op Expression
   32           | Expression binary_op Expression .

    ADD   shift, and go to state 64
    SUB   shift, and go to state 65
    MUL   shift, and go to state 66
    QUO   shift, and go to state 67
    REM   shift, and go to state 68
    GTR   shift, and go to state 71
    LSS   shift, and go to state 72
    GEQ   shift, and go to state 73
    LEQ   shift, and go to state 74
    EQL   shift, and go to state 75
    NEQ   shift, and go to state 76
    LAND  shift, and go to state 83
    LOR   shift, and go to state 84

    ADD       [reduce using rule 32 (Expression)]
    SUB       [reduce using rule 32 (Expression)]
    MUL       [reduce using rule 32 (Expression)]
    QUO       [reduce using rule 32 (Expression)]
    REM       [reduce using rule 32 (Expression)]
    GTR       [reduce using rule 32 (Expression)]
    LSS       [reduce using rule 32 (Expression)]
    GEQ       [reduce using rule 32 (Expression)]
    LEQ       [reduce using rule 32 (Expression)]
    EQL       [reduce using rule 32 (Expression)]
    NEQ       [reduce using rule 32 (Expression)]
    LAND      [reduce using rule 32 (Expression)]
    LOR       [reduce using rule 32 (Expression)]
    $default  reduce using rule 32 (Expression)

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 110

   32 Expression: Expression . binary_op Expression
   66 IndexExpr: PrimaryExpr LBRACK Expression . RBRACK

    ADD     shift, and go to state 64
    SUB     shift, and go to state 65
    MUL     shift, and go to state 66
    QUO     shift, and go to state 67
    REM     shift, and go to state 68
    GTR     shift, and go to state 71
    LSS     shift, and go to state 72
    GEQ     shift, and go to state 73
    LEQ     shift, and go to state 74
    EQL     shift, and go to state 75
    NEQ     shift, and go to state 76
    LAND    shift, and go to state 83
    LOR     shift, and go to state 84
    RBRACK  shift, and go to state 120

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 111

   72 RBRACE1: RBRACE .

    $default  reduce using rule 72 (RBRACE1)


State 112

   70 Block: LBRACE1 StatementList RBRACE1 .

    $default  reduce using rule 70 (Block)


State 113

   30 ArrayType: LBRACK Expression RBRACK Type .

    $default  reduce using rule 30 (ArrayType)


State 114

   82 PrintStmt: PRINT LPAREN Expression RPAREN .

    $default  reduce using rule 82 (PrintStmt)


State 115

   83 PrintStmt: PRINTLN LPAREN Expression RPAREN .

    $default  reduce using rule 83 (PrintStmt)


State 116

   74 IfStmt: IF Condition Block ELSE . IfStmt
   75       | IF Condition Block ELSE . Block

    LBRACE  shift, and go to state 6
    IF      shift, and go to state 10

    Block    go to state 121
    LBRACE1  go to state 43
    IfStmt   go to state 122


State 117

   79 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 123


State 118

   12 DeclarationStmt: VAR ID Type ASSIGN . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 124
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40


State 119

   67 ConversionExpr: Type LPAREN Expression RPAREN .

    $default  reduce using rule 67 (ConversionExpr)


State 120

   66 IndexExpr: PrimaryExpr LBRACK Expression RBRACK .

    $default  reduce using rule 66 (IndexExpr)


State 121

   75 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 75 (IfStmt)


State 122

   74 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 74 (IfStmt)


State 123

   79 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    NOT         shift, and go to state 3
    LPAREN      shift, and go to state 4
    LBRACK      shift, and go to state 5
    INT         shift, and go to state 13
    FLOAT       shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    INT_LIT     shift, and go to state 17
    FLOAT_LIT   shift, and go to state 18
    STRING_LIT  shift, and go to state 19
    ID          shift, and go to state 20
    TRUE        shift, and go to state 21
    FALSE       shift, and go to state 22

    SimpleStmt      go to state 125
    AssignmentStmt  go to state 28
    ExpressionStmt  go to state 29
    Type            go to state 30
    TypeName        go to state 31
    ArrayType       go to state 32
    Expression      go to state 33
    UnaryExpr       go to state 34
    unary_op        go to state 35
    PrimaryExpr     go to state 36
    Operand         go to state 37
    Literal         go to state 38
    IndexExpr       go to state 39
    ConversionExpr  go to state 40
    IncDecStmt      go to state 41
    PostStmt        go to state 126


State 124

   12 DeclarationStmt: VAR ID Type ASSIGN Expression .
   32 Expression: Expression . binary_op Expression

    ADD   shift, and go to state 64
    SUB   shift, and go to state 65
    MUL   shift, and go to state 66
    QUO   shift, and go to state 67
    REM   shift, and go to state 68
    GTR   shift, and go to state 71
    LSS   shift, and go to state 72
    GEQ   shift, and go to state 73
    LEQ   shift, and go to state 74
    EQL   shift, and go to state 75
    NEQ   shift, and go to state 76
    LAND  shift, and go to state 83
    LOR   shift, and go to state 84

    $default  reduce using rule 12 (DeclarationStmt)

    binary_op  go to state 86
    cmp_op     go to state 87
    l_op       go to state 88
    add_op     go to state 89
    mul_op     go to state 90


State 125

   81 PostStmt: SimpleStmt .

    $default  reduce using rule 81 (PostStmt)


State 126

   79 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 79 (ForClause)
